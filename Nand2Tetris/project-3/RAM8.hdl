// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address , a=loadReg1 , b=loadReg2 , c=loadReg3 , d=loadReg4 , e=loadReg5 , f=loadReg6 , g=loadReg7 , h=loadReg8 );
    Register(in=in , load=loadReg1 , out=outReg1 );
    Register(in=in , load=loadReg2 , out=outReg2 );
    Register(in=in , load=loadReg3 , out=outReg3 );
    Register(in=in , load=loadReg4 , out=outReg4 );
    Register(in=in , load=loadReg5 , out=outReg5 );
    Register(in=in , load=loadReg6 , out=outReg6 );
    Register(in=in , load=loadReg7 , out=outReg7 );
    Register(in=in , load=loadReg8 , out=outReg8 );
    Mux8Way16(a=outReg1 , b=outReg2 , c=outReg3 , d=outReg4 , e=outReg5 , f=outReg6 , g=outReg7 , h=outReg8 , sel=address , out=out );
}